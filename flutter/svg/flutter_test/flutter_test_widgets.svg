<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2478px" height="1852px" viewBox="-0.5 -0.5 2478 1852" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2024-05-14T01:24:21.626Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/24.2.5 Chrome/120.0.6099.109 Electron/28.1.0 Safari/537.36&quot; etag=&quot;PAhzz9MF9wyCYkcK6dgu&quot; scale=&quot;1&quot; border=&quot;0&quot; version=&quot;24.2.5&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;607&quot; dy=&quot;3221&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;WIyWlLk6GJQsqaUBKTNV-0&quot; /&gt;&#10;        &lt;mxCell id=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-0&quot; /&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-170&quot; value=&quot;flutter/xxx/binding.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3440&quot; y=&quot;-1310&quot; width=&quot;580&quot; height=&quot;1140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-128&quot; value=&quot;dart-sdk/_http&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3440&quot; y=&quot;-1520&quot; width=&quot;580&quot; height=&quot;200&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-136&quot; value=&quot;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3540&quot; y=&quot;-1280&quot; width=&quot;390&quot; height=&quot;670&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-32&quot; value=&quot;flutter_test/_binding_io.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2410&quot; y=&quot;-1520&quot; width=&quot;1020&quot; height=&quot;200&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-34&quot; value=&quot;TestWidgetsFlutterBinding ensureInitialized(...)&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;environment ??= Platform.environment;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;//&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;https://api.flutter.dev/flutter/flutter_test/TestWidgetsFlutterBinding/ensureInitialized.html&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;// flutter testの場合は&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;AutomatedTestWidgetsFlutterBindingを返す。&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;// ただしwebは常に&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;AutomatedTestWidgetsFlutterBindingを返す。&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;if (environment.containsKey(&amp;#39;FLUTTER_TEST&amp;#39;) &amp;amp;amp;&amp;amp;amp; environment[&amp;#39;FLUTTER_TEST&amp;#39;] != &amp;#39;false&amp;#39;)&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;return AutomatedTestWidgetsFlutterBinding.ensureInitialized();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;return LiveTestWidgetsFlutterBinding.ensureInitialized();&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2430&quot; y=&quot;-1480&quot; width=&quot;530&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-118&quot; value=&quot;flutter_test/widget_tester.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1690&quot; y=&quot;-1300&quot; width=&quot;540&quot; height=&quot;940&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-117&quot; value=&quot;flutter_test/binding.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2240&quot; y=&quot;-1310&quot; width=&quot;1190&quot; height=&quot;1140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-115&quot; value=&quot;flutter_test/controller.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1690&quot; y=&quot;-356&quot; width=&quot;540&quot; height=&quot;186&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-21&quot; value=&quot;flutter_test/widget_tester.dart&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;verticalAlign=top;align=left;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1680&quot; y=&quot;-1920&quot; width=&quot;710&quot; height=&quot;600&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-9&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-6&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; value=&quot;abstract&amp;amp;nbsp;TestWidgetsFlutterBinding&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2770&quot; y=&quot;-1000&quot; width=&quot;600&quot; height=&quot;708&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-1&quot; value=&quot;&amp;lt;div&amp;gt;TestWidgetsFlutterBinding() : platformDispatcher = TestPlatformDispatcher(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; platformDispatcher: PlatformDispatcher.instance,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; debugPrint = debugPrintOverride;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; debugDisableShadows = disableShadows;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=default;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;600&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-175&quot; value=&quot;Clock get clock;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;138&quot; width=&quot;600&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-187&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; bool get overrideHttpClient =&amp;amp;gt; true;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;168&quot; width=&quot;600&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-161&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;void initInstances()&amp;amp;nbsp;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ..., super.initInstances();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; _instance = this;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ...,&amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;if (overrideHttpClient)&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;binding.setupHttpOverrides();&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;208&quot; width=&quot;600&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-10&quot; value=&quot;Future&amp;amp;lt;void&amp;amp;gt; pump&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;([ Duration? duration,&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;EnginePhase newPhase&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;= EnginePhase.sendSemanticsUpdate ]);&amp;lt;/span&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;fontStyle=4&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;298&quot; width=&quot;600&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-23&quot; value=&quot;&amp;lt;div&amp;gt;static TestWidgetsFlutterBinding ensureInitialized([@visibleForTesting Map&amp;amp;lt;String, String&amp;amp;gt;? environment])&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; if (_instance != null) &amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;return _instance!;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return binding.ensureInitialized(environment);&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;328&quot; width=&quot;600&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-26&quot; value=&quot;&amp;lt;div&amp;gt;&amp;amp;nbsp;Future&amp;amp;lt;void&amp;amp;gt; runTest(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Future&amp;amp;lt;void&amp;amp;gt; Function() testBody,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; VoidCallback invariantTester, {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; String description = &amp;#39;&amp;#39;,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; });&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;fontStyle=4&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;388&quot; width=&quot;600&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-28&quot; value=&quot;&amp;lt;div&amp;gt;Future&amp;amp;lt;void&amp;amp;gt; _runTest(&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;Future&amp;amp;lt;void&amp;amp;gt; Function() testBody,&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;VoidCallback invariantTester,&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; String description,&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;)&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; final Zone testZone = _parentZone!.fork(specification: errorHandlingZoneSpecification);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; testZone.runBinary&amp;amp;lt;Future&amp;amp;lt;void&amp;amp;gt;, Future&amp;amp;lt;void&amp;amp;gt; Function(), VoidCallback&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;(_runTestBody, testBody, invariantTester)&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;.whenComplete(testCompletionHandler);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return testCompleter.future;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;478&quot; width=&quot;600&quot; height=&quot;110&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-0&quot; value=&quot;&amp;lt;div&amp;gt;Future&amp;amp;lt;void&amp;amp;gt; _runTestBody(Future&amp;amp;lt;void&amp;amp;gt; Function() testBody, VoidCallback invariantTester)&amp;amp;nbsp;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;..., runApp(Container(key: UniqueKey(), child: _preTestMessage)); // Reset the tree to a known state.&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;await pump();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;...,&amp;amp;nbsp;&amp;amp;nbsp;await testBody();&amp;amp;nbsp;&amp;amp;nbsp;// run the test&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;...&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; vertex=&quot;1&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot;&gt;&#10;          &lt;mxGeometry y=&quot;588&quot; width=&quot;600&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-12&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;678&quot; width=&quot;600&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-1&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0;exitY=0.726;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-28&quot; target=&quot;edypBiAzCNMCQE0_pTQq-0&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-90&quot; y=&quot;597&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-20&quot; y=&quot;590&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-2&quot; value=&quot;_runTestBody()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;edypBiAzCNMCQE0_pTQq-1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-11&quot; y=&quot;-34&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-6&quot; value=&quot;abstract&amp;amp;nbsp;BindingBase&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3560&quot; y=&quot;-584&quot; width=&quot;260&quot; height=&quot;128&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-67&quot; value=&quot;BindingBase() {&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;initInstances();&amp;amp;nbsp; , ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;}&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=default;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-6&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;260&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-186&quot; value=&quot;initInstances()&quot; style=&quot;text;strokeColor=default;fillColor=default;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-6&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;260&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; value=&quot;AutomatedTestWidgetsFlutterBinding&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2250&quot; y=&quot;-1020&quot; width=&quot;450&quot; height=&quot;688&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-119&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;Clock get clock =&amp;amp;gt;&amp;amp;nbsp;return _clock!;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;Clock? _clock;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;450&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;RZ0WrOMb1lF3hbAa9DXk-0&quot; value=&quot;FakeAsync? _currentFakeAsync; // set in runTest; cleared in postTest&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;450&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-19&quot; value=&quot;&amp;lt;div&amp;gt;static AutomatedTestWidgetsFlutterBinding ensureInitialized()&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; if (AutomatedTestWidgetsFlutterBinding._instance == null)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; AutomatedTestWidgetsFlutterBinding();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return AutomatedTestWidgetsFlutterBinding.instance;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;128&quot; width=&quot;450&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-14&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;void initInstances()&amp;amp;nbsp;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; super.initInstances();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; _instance = this;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;binding.mockFlutterAssets();&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;198&quot; width=&quot;450&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-17&quot; value=&quot;Future&amp;amp;lt;void&amp;amp;gt; pump(...)&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;return TestAsyncUtils.guard&amp;amp;lt;void&amp;amp;gt;(() {&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;if (duration != null)&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;_currentFakeAsync!.elapse(duration); //duration進める&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;_phase = newPhase;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;if (hasScheduledFrame) {&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; _currentFakeAsync!.flushMicrotasks();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; handleBeginFrame(Duration(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; microseconds: _clock!.now().microsecondsSinceEpoch,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ));&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; _currentFakeAsync!.flushMicrotasks();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; handleDrawFrame();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; }&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; _currentFakeAsync!.flushMicrotasks();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return Future&amp;amp;lt;void&amp;amp;gt;.value();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;});&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;288&quot; width=&quot;450&quot; height=&quot;230&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-27&quot; value=&quot;Future&amp;amp;lt;void&amp;amp;gt; runTest(...)&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;final FakeAsync fakeAsync = FakeAsync();&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; _currentFakeAsync = fakeAsync; // reset in postTest&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; _clock = fakeAsync.getClock(DateTime.utc(2015));&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; late Future&amp;amp;lt;void&amp;amp;gt; testBodyResult;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; fakeAsync.run((FakeAsync localFakeAsync) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;testBodyResult = _runTest(testBody, invariantTester, description);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; });&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; ...(マイクロタスクのflush)&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;518&quot; width=&quot;450&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-20&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;658&quot; width=&quot;450&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-18&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2620&quot; y=&quot;-1010&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-1010&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2760&quot; y=&quot;-706&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2760&quot; y=&quot;-706&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-22&quot; value=&quot;void testWidgets(&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;String description,&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; WidgetTesterCallback callback,{..., TestVariant&amp;amp;lt;Object?&amp;amp;gt; variant = const DefaultTestVariant(),...}&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; final TestWidgetsFlutterBinding binding = TestWidgetsFlutterBinding.ensureInitialized();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; final WidgetTester tester = WidgetTester._(binding);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; for (final dynamic value in variant.values) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; ...;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; final String combinedDescription = variationDescription.isNotEmpty&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ? &amp;#39;$description (variant: $variationDescription)&amp;#39;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; : description;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; test(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; combinedDescription,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; () {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; tester._testDescription = combinedDescription;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; test_package.addTearDown(binding.postTest);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return binding.runTest(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; () async {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; Object? memento;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; try {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; memento = await variant.setUp(value);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; await callback(tester);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; } finally {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; await variant.tearDown(value, memento);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; }&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; },&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; description: combinedDescription,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; );&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; },&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; );&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1700&quot; y=&quot;-1890&quot; width=&quot;540&quot; height=&quot;550&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-57&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;entryX=0.733;entryY=0.171;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-34&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-19&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2680&quot; y=&quot;-1415&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2680&quot; y=&quot;-940&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2580&quot; y=&quot;-940&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-58&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;(flutter test or webの場合)&amp;lt;/div&amp;gt;ensureInitialized()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-57&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-10&quot; y=&quot;-146&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-49&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=diamondThin;endFill=1;endSize=12;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-13&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2570&quot; y=&quot;-1126&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; value=&quot;enum&amp;amp;nbsp;LiveTestWidgetsFlutterBindingFramePolicy&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2250&quot; y=&quot;-1220&quot; width=&quot;280&quot; height=&quot;188&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-39&quot; value=&quot;onlyPumps&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;280&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-40&quot; value=&quot;fadePointers&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;68&quot; width=&quot;280&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-45&quot; value=&quot;fullyLive&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;280&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-46&quot; value=&quot;benchmark&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;128&quot; width=&quot;280&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-48&quot; value=&quot;benchmarkLive&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;158&quot; width=&quot;280&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-35&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;exitX=0.663;exitY=-0.013;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-23&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-34&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;3168&quot; y=&quot;-780&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3000&quot; y=&quot;-780&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3000&quot; y=&quot;-1415&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-36&quot; value=&quot;&amp;lt;div&amp;gt;ensureInitialized()&amp;lt;/div&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-35&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.5703&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-61&quot; y=&quot;-276&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-61&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.3;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-27&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-28&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2550&quot; y=&quot;-448&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2430&quot; y=&quot;-680&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-62&quot; value=&quot;_runTest()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-61&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-7&quot; y=&quot;-12&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-68&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-19&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2481&quot; y=&quot;-584&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2261&quot; y=&quot;-261&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-69&quot; value=&quot;TestWidgetsFlutterBinding()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-68&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-45&quot; y=&quot;13&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-77&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-136&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;3210&quot; y=&quot;-420&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;3280&quot; y=&quot;-330&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;3455&quot; y=&quot;-701&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3455&quot; y=&quot;-700&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-121&quot; value=&quot;with&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-77&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1306&quot; y=&quot;2&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;66&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-78&quot; value=&quot;&amp;lt;div&amp;gt;mixin&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;ServicesBinding,&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;GestureBinding,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;SemanticsBinding,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;RendererBinding,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;PaintingBinding,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;TestDefaultBinaryMessengerBinding&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=118;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3560&quot; y=&quot;-815&quot; width=&quot;350&quot; height=&quot;188&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-80&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;void initInstances()&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-78&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;350&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-135&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-78&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;158&quot; width=&quot;350&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-81&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.068;entryY=0.209;entryDx=0;entryDy=0;exitX=0.96;exitY=0.314;exitDx=0;exitDy=0;exitPerimeter=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-177&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-136&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;4129.73&quot; y=&quot;-350&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;4199.73&quot; y=&quot;-187&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-82&quot; value=&quot;initInstances()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-81&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;14&quot; y=&quot;9&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-83&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.72;entryY=0.457;entryDx=0;entryDy=0;exitX=-0.012;exitY=0.075;exitDx=0;exitDy=0;exitPerimeter=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-67&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-177&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2390&quot; y=&quot;-270&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2460&quot; y=&quot;-107&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-84&quot; value=&quot;initInstances()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-83&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;16&quot; y=&quot;188&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; value=&quot;WidgetTester&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1710&quot; y=&quot;-1270&quot; width=&quot;490&quot; height=&quot;748&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-122&quot; value=&quot;&amp;lt;div&amp;gt;WidgetTester._(super.binding) {...}&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=default;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;490&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-97&quot; value=&quot;TestWidgetsFlutterBinding get binding =&amp;amp;gt; super.binding as TestWidgetsFlutterBinding;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;68&quot; width=&quot;490&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-95&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Future&amp;amp;lt;void&amp;amp;gt; pump([&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Duration? duration,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; EnginePhase phase = EnginePhase.sendSemanticsUpdate,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ]) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return TestAsyncUtils.guard&amp;amp;lt;void&amp;amp;gt;(() =&amp;amp;gt; binding.pump(duration, phase));&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;490&quot; height=&quot;110&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-92&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Future&amp;amp;lt;void&amp;amp;gt; pumpWidget(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Widget widget, [&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Duration? duration,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; EnginePhase phase = EnginePhase.sendSemanticsUpdate,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ]) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return TestAsyncUtils.guard&amp;amp;lt;void&amp;amp;gt;(() {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; binding.attachRootWidget(binding.wrapWithDefaultView(widget));&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; binding.scheduleFrame();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return binding.pump(duration, phase);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; });&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;208&quot; width=&quot;490&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-96&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Future&amp;amp;lt;int&amp;amp;gt; pumpAndSettle([&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Duration duration = const Duration(milliseconds: 100),&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; EnginePhase phase = EnginePhase.sendSemanticsUpdate,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Duration timeout = const Duration(minutes: 10),&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; ]) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return true;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; }());&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; return TestAsyncUtils.guard&amp;amp;lt;int&amp;amp;gt;(() async {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; final DateTime endTime = binding.clock.fromNowBy(timeout);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; int count = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; do {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; if (binding.clock.now().isAfter(endTime)) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; throw FlutterError(&amp;#39;pumpAndSettle timed out&amp;#39;);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; }&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; await binding.pump(duration, phase);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; count += 1;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; } while (binding.hasScheduledFrame);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return count;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; });&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;398&quot; width=&quot;490&quot; height=&quot;320&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-88&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;718&quot; width=&quot;490&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-89&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-22&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1710&quot; y=&quot;-1470&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2430&quot; y=&quot;-680&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-90&quot; value=&quot;生成&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-89&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;4&quot; y=&quot;-6&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-91&quot; value=&quot;abstract WidgetController&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1715&quot; y=&quot;-310&quot; width=&quot;275&quot; height=&quot;98&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-120&quot; value=&quot;final WidgetsBinding binding;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-91&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;275&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-94&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-91&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;68&quot; width=&quot;275&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-93&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-91&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2330&quot; y=&quot;-274&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2170&quot; y=&quot;-122&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-98&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=diamondThin;endFill=1;endSize=12;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2290&quot; y=&quot;-450&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2345&quot; y=&quot;-378&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2860&quot; y=&quot;-220&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2090&quot; y=&quot;-220&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-99&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;strokeColor=#00FF00;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.997;exitY=0.03;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-85&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-17&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2070&quot; y=&quot;-43&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2600&quot; y=&quot;-119.99999999999955&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-100&quot; value=&quot;pump()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#009900;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-99&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1&quot; y=&quot;51&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-113&quot; value=&quot;import &amp;#39;_binding_io.dart&amp;#39; if (dart.library.html) &amp;#39;_binding_web.dart&amp;#39; as binding;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;2250&quot; y=&quot;-1260&quot; width=&quot;420&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-59&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-22&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;4100&quot; y=&quot;-88&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;3130&quot; y=&quot;-500&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;1620&quot; y=&quot;-1480&quot; /&gt;&#10;              &lt;mxPoint x=&quot;1620&quot; y=&quot;-590&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2140&quot; y=&quot;-590&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2140&quot; y=&quot;-492&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-60&quot; value=&quot;runTest()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-59&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-20&quot; y=&quot;-654&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-123&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;strokeColor=#00FF00;entryX=0.921;entryY=1.003;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-92&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-136&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;1420&quot; y=&quot;-960&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1471&quot; y=&quot;-409&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;1600&quot; y=&quot;-967&quot; /&gt;&#10;              &lt;mxPoint x=&quot;1600&quot; y=&quot;-130&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3929&quot; y=&quot;-130&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-125&quot; value=&quot;attachRootWidget()&amp;lt;div&amp;gt;scheduleFrame()&amp;lt;/div&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#009900;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-123&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.916&quot; y=&quot;38&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-48&quot; y=&quot;197&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-126&quot; value=&quot;&amp;lt;div&amp;gt;mixin&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;SchedulerBinding&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=48;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3560&quot; y=&quot;-1270&quot; width=&quot;350&quot; height=&quot;278&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-130&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;void initInstances()&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-126&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;48&quot; width=&quot;350&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-127&quot; value=&quot;&amp;lt;div&amp;gt;void scheduleFrame()&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-126&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;350&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-198&quot; value=&quot;&amp;lt;div&amp;gt;void handleBeginFrame(Duration? rawTimeStamp) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; ...&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; firstRawTimeStampInEpoch ??= rawTimeStamp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; _currentFrameTimeStamp =&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; _adjustForEpoch(rawTimeStamp ?? _lastRawTimeStamp);&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; if (rawTimeStamp != null) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; _lastRawTimeStamp = rawTimeStamp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-126&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;350&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-129&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-126&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;248&quot; width=&quot;350&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-131&quot; value=&quot;&amp;lt;div&amp;gt;mixin&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;WidgetsBinding&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=48;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3560&quot; y=&quot;-980&quot; width=&quot;350&quot; height=&quot;148&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-132&quot; value=&quot;&amp;lt;div&amp;gt;@override&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;void initInstances()&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-131&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;48&quot; width=&quot;350&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-134&quot; value=&quot;attachRootWidget()&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-131&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;350&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-133&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-131&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;350&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-162&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;exitX=1;exitY=0.342;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-14&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-161&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2710&quot; y=&quot;-817&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-902&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-163&quot; value=&quot;initInstances()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-162&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-5&quot; y=&quot;-36&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-165&quot; value=&quot;&amp;lt;div&amp;gt;void setupHttpOverrides() {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; HttpOverrides.global = _MockHttpOverrides();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;}&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3120&quot; y=&quot;-1480&quot; width=&quot;270&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-166&quot; value=&quot;&amp;lt;div&amp;gt;abstract&amp;amp;nbsp;HttpOverrides&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=38;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3535&quot; y=&quot;-1498&quot; width=&quot;310&quot; height=&quot;128&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-168&quot; value=&quot;&amp;lt;div&amp;gt;static set global(HttpOverrides? overrides) {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; _global = overrides;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-166&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;38&quot; width=&quot;310&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-169&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-166&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;310&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-173&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-165&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-166&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;3630&quot; y=&quot;-1270.46&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;3685&quot; y=&quot;-1778.46&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-174&quot; value=&quot;setter global&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-173&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-45&quot; y=&quot;-11&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-176&quot; value=&quot;&amp;lt;div&amp;gt;mixin&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;TestDefaultBinaryMessengerBinding&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=48;fillColor=default;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;html=1;autosize=1;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3120&quot; y=&quot;-1205&quot; width=&quot;250&quot; height=&quot;148&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-177&quot; value=&quot;&amp;lt;div&amp;gt;void initInstances() {&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; super.initInstances();&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; _instance = this;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; }&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-176&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;48&quot; width=&quot;250&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-179&quot; value=&quot;...&quot; style=&quot;text;strokeColor=default;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;autosize=1;dashed=1;dashPattern=1 4;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-176&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;250&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-24&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.347;entryY=-0.033;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-22&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-23&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;1970&quot; y=&quot;-1330&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2978&quot; y=&quot;-1330&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-25&quot; value=&quot;ensureInitialized()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-24&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-640&quot; y=&quot;-4&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-184&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.4;entryY=0.689;entryDx=0;entryDy=0;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-136&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-14&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;3528&quot; y=&quot;183&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;3240&quot; y=&quot;-380&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;3839&quot; y=&quot;-70&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2430&quot; y=&quot;-70&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-185&quot; value=&quot;initInstances()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=default;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-184&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;960&quot; y=&quot;-293&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-196&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;strokeColor=#00FF00;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.511;exitY=0.748;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-17&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-127&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2730&quot; y=&quot;-356&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2781&quot; y=&quot;215&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-197&quot; value=&quot;handleBeginFrame()&amp;lt;div&amp;gt;handleDrawFrame()&amp;lt;/div&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#009900;&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-196&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-549&quot; y=&quot;310&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-171&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-1&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-165&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2710&quot; y=&quot;-907&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-902&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;3090&quot; y=&quot;-1450&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-172&quot; value=&quot;setupHttpOverrides()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-171&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;20&quot; y=&quot;279&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-180&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-0&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-176&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;3380&quot; y=&quot;-706&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;3775&quot; y=&quot;-935&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;3240&quot; y=&quot;-1030&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3240&quot; y=&quot;-1030&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-181&quot; value=&quot;with&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-180&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.1306&quot; y=&quot;2&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-3&quot; value=&quot;void runApp(Widget app)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;autosize=1;&quot; vertex=&quot;1&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;3560&quot; y=&quot;-410&quot; width=&quot;160&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-72&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;strokeWidth=3;exitX=0.8;exitY=0.457;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.55;entryY=1.028;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;lGMvhxAemSs4F71mGPeQ-19&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-67&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2360&quot; y=&quot;-310&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2610&quot; y=&quot;-412&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;2610&quot; y=&quot;-800&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2650&quot; y=&quot;-800&quot; /&gt;&#10;              &lt;mxPoint x=&quot;2650&quot; y=&quot;-230&quot; /&gt;&#10;              &lt;mxPoint x=&quot;3703&quot; y=&quot;-230&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;lGMvhxAemSs4F71mGPeQ-73&quot; value=&quot;BindingBase()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; parent=&quot;lGMvhxAemSs4F71mGPeQ-72&quot; vertex=&quot;1&quot; connectable=&quot;0&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.3479&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-627&quot; y=&quot;-420&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-6&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;edypBiAzCNMCQE0_pTQq-0&quot; target=&quot;edypBiAzCNMCQE0_pTQq-3&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-432&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-357&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-7&quot; value=&quot;runApp()&amp;lt;div&amp;gt;※ リセットの為?&amp;lt;/div&amp;gt;&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;edypBiAzCNMCQE0_pTQq-6&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-11&quot; y=&quot;16&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-8&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=3;curved=1;entryX=0.997;entryY=0.807;entryDx=0;entryDy=0;exitX=0.365;exitY=-0.009;exitDx=0;exitDy=0;exitPerimeter=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;WIyWlLk6GJQsqaUBKTNV-1&quot; source=&quot;edypBiAzCNMCQE0_pTQq-0&quot; target=&quot;lGMvhxAemSs4F71mGPeQ-17&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-432&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;2780&quot; y=&quot;-357&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-9&quot; value=&quot;_runTestBody()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;edypBiAzCNMCQE0_pTQq-8&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.1383&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-11&quot; y=&quot;-34&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edypBiAzCNMCQE0_pTQq-10&quot; value=&quot;pump()&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;edypBiAzCNMCQE0_pTQq-8&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.6476&quot; y=&quot;33&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g><rect x="1897" y="610" width="580" height="1140" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 578px; height: 1px; padding-top: 617px; margin-left: 1899px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter/xxx/binding.dart</div></div></div></foreignObject><text x="1899" y="629" fill="#333333" font-family="Helvetica" font-size="12px">flutter/xxx/binding.dart</text></switch></g></g><g><rect x="1897" y="400" width="580" height="200" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 578px; height: 1px; padding-top: 407px; margin-left: 1899px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">dart-sdk/_http</div></div></div></foreignObject><text x="1899" y="419" fill="#333333" font-family="Helvetica" font-size="12px">dart-sdk/_http</text></switch></g></g><g><rect x="1997" y="640" width="390" height="670" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><rect x="867" y="400" width="1020" height="200" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1018px; height: 1px; padding-top: 407px; margin-left: 869px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter_test/_binding_io.dart</div></div></div></foreignObject><text x="869" y="419" fill="#333333" font-family="Helvetica" font-size="12px">flutter_test/_binding_io.dart</text></switch></g></g><g><rect x="887" y="440" width="530" height="130" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 528px; height: 1px; padding-top: 447px; margin-left: 889px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">TestWidgetsFlutterBinding ensureInitialized(...)<br /><div>   <span style="background-color: initial;">environment ??= Platform.environment;</span></div><div><span style="background-color: initial;">   // </span><span style="background-color: initial;">https://api.flutter.dev/flutter/flutter_test/TestWidgetsFlutterBinding/ensureInitialized.html</span></div><div><span style="background-color: initial;">   // flutter testの場合は</span><span style="background-color: initial;">AutomatedTestWidgetsFlutterBindingを返す。</span></div><div><span style="background-color: initial;">   // ただしwebは常に</span><span style="background-color: initial;">AutomatedTestWidgetsFlutterBindingを返す。</span></div><div>   if (environment.containsKey('FLUTTER_TEST') &amp;&amp; environment['FLUTTER_TEST'] != 'false') </div><div>     return AutomatedTestWidgetsFlutterBinding.ensureInitialized();</div><div>   return LiveTestWidgetsFlutterBinding.ensureInitialized();</div></div></div></div></foreignObject><text x="889" y="459" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">TestWidgetsFlutterBinding ensureInitialized(...)...</text></switch></g></g><g><rect x="147" y="620" width="540" height="940" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 538px; height: 1px; padding-top: 627px; margin-left: 149px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter_test/widget_tester.dart</div></div></div></foreignObject><text x="149" y="639" fill="#333333" font-family="Helvetica" font-size="12px">flutter_test/widget_tester.dart</text></switch></g></g><g><rect x="697" y="610" width="1190" height="1140" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1188px; height: 1px; padding-top: 617px; margin-left: 699px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter_test/binding.dart</div></div></div></foreignObject><text x="699" y="629" fill="#333333" font-family="Helvetica" font-size="12px">flutter_test/binding.dart</text></switch></g></g><g><rect x="147" y="1564" width="540" height="186" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 538px; height: 1px; padding-top: 1571px; margin-left: 149px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter_test/controller.dart</div></div></div></foreignObject><text x="149" y="1583" fill="#333333" font-family="Helvetica" font-size="12px">flutter_test/controller.dart</text></switch></g></g><g><rect x="137" y="0" width="710" height="600" fill="#f5f5f5" stroke="#666666" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 708px; height: 1px; padding-top: 7px; margin-left: 139px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">flutter_test/widget_tester.dart</div></div></div></foreignObject><text x="139" y="19" fill="#333333" font-family="Helvetica" font-size="12px">flutter_test/widget_tester.dart</text></switch></g></g><g><path d="M 1827 1274 L 1922 1274 L 1922 1400 L 2008.88 1400" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2015.88 1400 L 2008.88 1403.5 L 2008.88 1396.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 1227 958 L 1227 920 L 1827 920 L 1827 958" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1227 958 L 1227 1628 L 1827 1628 L 1827 958" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1227 958 L 1827 958" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 939px; margin-left: 1527px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">abstract TestWidgetsFlutterBinding</div></div></div></foreignObject><text x="1527" y="943" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">abstract TestWidgetsFlutterBinding</text></switch></g></g><g><rect x="1227" y="958" width="600" height="100" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 965px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 96px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>TestWidgetsFlutterBinding() : platformDispatcher = TestPlatformDispatcher(</div><div>    platformDispatcher: PlatformDispatcher.instance,</div><div>  ) {</div><div>    debugPrint = debugPrintOverride;</div><div>    debugDisableShadows = disableShadows;</div><div>  }</div></div></div></div></foreignObject><text x="1233" y="977" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">TestWidgetsFlutterBinding() : platformDispatcher = TestPlatformDispatcher(...</text></switch></g></g><g><rect x="1227" y="1058" width="600" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1065px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Clock get clock;</div></div></div></foreignObject><text x="1233" y="1077" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Clock get clock;</text></switch></g></g><g><rect x="1227" y="1088" width="600" height="40" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1095px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 36px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override</div><div>  bool get overrideHttpClient =&gt; true;</div></div></div></div></foreignObject><text x="1233" y="1107" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="1227" y="1128" width="600" height="90" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1135px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 86px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div>void initInstances() <div><div>  ..., super.initInstances();</div><div>  _instance = this;<br /></div></div><div>  ..., <span style="background-color: initial;">if (overrideHttpClient) </span><span style="background-color: initial;">binding.setupHttpOverrides();</span></div></div></div></div></foreignObject><text x="1233" y="1147" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="1227" y="1218" width="600" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1225px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; text-decoration: underline; white-space: normal; overflow-wrap: normal;">Future&lt;void&gt; pump<span style="background-color: initial;">([ Duration? duration, </span><span style="background-color: initial;">EnginePhase newPhase  </span><span style="background-color: initial;">= EnginePhase.sendSemanticsUpdate ]);</span></div></div></div></foreignObject><text x="1233" y="1237" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-decoration="underline">Future&lt;void&gt; pump([ Duration? duration, EnginePhase newPhase  = EnginePhase.sendSemanticsUpdate ]);</text></switch></g></g><g><rect x="1227" y="1248" width="600" height="60" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1255px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>static TestWidgetsFlutterBinding ensureInitialized([@visibleForTesting Map&lt;String, String&gt;? environment]) </div><div>    if (_instance != null) <span style="background-color: initial;">return _instance!;</span></div><div>    return binding.ensureInitialized(environment);</div></div></div></div></foreignObject><text x="1233" y="1267" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static TestWidgetsFlutterBinding ensureInitialized([@visibleForTesting Map&lt;String, String&gt;? enviro...</text></switch></g></g><g><rect x="1227" y="1308" width="600" height="90" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1315px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 86px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; text-decoration: underline; white-space: normal; overflow-wrap: normal;"><div> Future&lt;void&gt; runTest(</div><div>    Future&lt;void&gt; Function() testBody,</div><div>    VoidCallback invariantTester, {</div><div>    String description = '',</div><div>  });</div></div></div></div></foreignObject><text x="1233" y="1327" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-decoration="underline">Future&lt;void&gt; runTest(...</text></switch></g></g><g><rect x="1227" y="1398" width="600" height="110" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1405px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 106px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>Future&lt;void&gt; _runTest(<span style="background-color: initial;">Future&lt;void&gt; Function() testBody, </span><span style="background-color: initial;">VoidCallback invariantTester,</span></div><div>    String description,<span style="background-color: initial;">) </span></div><div><span style="background-color: initial;">    ...</span></div><div><span style="background-color: initial;">    final Zone testZone = _parentZone!.fork(specification: errorHandlingZoneSpecification);</span></div><div>    testZone.runBinary&lt;Future&lt;void&gt;, Future&lt;void&gt; Function(), VoidCallback&gt;</div><div>     (_runTestBody, testBody, invariantTester)<span style="background-color: initial;">.whenComplete(testCompletionHandler);</span></div><div><span style="background-color: initial;">    return testCompleter.future;</span> <br /></div></div></div></div></foreignObject><text x="1233" y="1417" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Future&lt;void&gt; _runTest(Future&lt;void&gt; Function() testBody, VoidCallback invariantTester,...</text></switch></g></g><g><rect x="1227" y="1508" width="600" height="90" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1515px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 86px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>Future&lt;void&gt; _runTestBody(Future&lt;void&gt; Function() testBody, VoidCallback invariantTester) <br /></div><div>   ..., runApp(Container(key: UniqueKey(), child: _preTestMessage)); // Reset the tree to a known state.</div><div>   await pump();</div><div>   ...,  await testBody();  // run the test</div><div>   ...</div></div></div></div></foreignObject><text x="1233" y="1527" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Future&lt;void&gt; _runTestBody(Future&lt;void&gt; Function() testBody, VoidCallback invariantTester)...</text></switch></g></g><g><rect x="1227" y="1598" width="600" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 1605px; margin-left: 1233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="1233" y="1617" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 1227 1477.86 Q 1207 1477.9 1207 1515.45 Q 1207 1553 1216.9 1553" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1223.65 1553 L 1214.65 1557.5 L 1216.9 1553 L 1214.65 1548.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1490px; margin-left: 1198px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">_runTestBody()</div></div></div></foreignObject><text x="1198" y="1494" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">_runTestBody()</text></switch></g></g><g><path d="M 2017 1374 L 2017 1336 L 2277 1336 L 2277 1374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2017 1374 L 2017 1464 L 2277 1464 L 2277 1374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2017 1374 L 2277 1374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1355px; margin-left: 2147px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">abstract BindingBase</div></div></div></foreignObject><text x="2147" y="1359" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">abstract BindingBase</text></switch></g></g><g><rect x="2017" y="1374" width="260" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 250px; height: 1px; padding-top: 1381px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">BindingBase() {<br /><div> initInstances();  , ...</div><div>}</div></div></div></div></foreignObject><text x="2023" y="1393" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">BindingBase() {...</text></switch></g></g><g><rect x="2017" y="1434" width="260" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 250px; height: 1px; padding-top: 1441px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">initInstances()</div></div></div></foreignObject><text x="2023" y="1453" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">initInstances()</text></switch></g></g><g><path d="M 707 938 L 707 900 L 1157 900 L 1157 938" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 707 938 L 707 1588 L 1157 1588 L 1157 938" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 707 938 L 1157 938" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 919px; margin-left: 932px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">AutomatedTestWidgetsFlutterBinding</div></div></div></foreignObject><text x="932" y="923" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">AutomatedTestWidgetsFlutterBinding</text></switch></g></g><g><rect x="707" y="938" width="450" height="60" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 945px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override</div><div> Clock get clock =&gt; return _clock!;</div><div> Clock? _clock;</div></div></div></div></foreignObject><text x="713" y="957" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="707" y="998" width="450" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1005px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">FakeAsync? _currentFakeAsync; // set in runTest; cleared in postTest</div></div></div></foreignObject><text x="713" y="1017" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">FakeAsync? _currentFakeAsync; // set in runTest; cleared in postTest</text></switch></g></g><g><rect x="707" y="1028" width="450" height="70" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1035px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>static AutomatedTestWidgetsFlutterBinding ensureInitialized() </div><div>    if (AutomatedTestWidgetsFlutterBinding._instance == null)</div><div>      AutomatedTestWidgetsFlutterBinding();</div><div>    return AutomatedTestWidgetsFlutterBinding.instance;</div></div></div></div></foreignObject><text x="713" y="1047" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static AutomatedTestWidgetsFlutterBinding ensureInitialized()...</text></switch></g></g><g><rect x="707" y="1098" width="450" height="90" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1105px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 86px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div>void initInstances() <div><div>  super.initInstances();</div><div>  _instance = this;</div><div>  binding.mockFlutterAssets();</div></div></div></div></div></foreignObject><text x="713" y="1117" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="707" y="1188" width="450" height="230" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1195px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 226px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Future&lt;void&gt; pump(...)<div><span style="background-color: initial;">  </span><span style="background-color: initial;">return TestAsyncUtils.guard&lt;void&gt;(() {</span></div><div><span style="background-color: initial;">    </span><span style="background-color: initial;">if (duration != null) </span><span style="background-color: initial;">_currentFakeAsync!.elapse(duration); //duration進める</span></div><div><span style="background-color: initial;">    </span><span style="background-color: initial;">_phase = newPhase;</span></div><div><span style="background-color: initial;">    </span><span style="background-color: initial;">if (hasScheduledFrame) {</span></div><div>        _currentFakeAsync!.flushMicrotasks();</div><div>        handleBeginFrame(Duration(</div><div>          microseconds: _clock!.now().microsecondsSinceEpoch,</div><div>        ));</div><div>        _currentFakeAsync!.flushMicrotasks();</div><div>        handleDrawFrame();</div><div>      }</div><div>      _currentFakeAsync!.flushMicrotasks();</div><div>      return Future&lt;void&gt;.value();</div><div><span style="background-color: initial;">});</span></div></div></div></div></foreignObject><text x="713" y="1207" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Future&lt;void&gt; pump(...)...</text></switch></g></g><g><rect x="707" y="1418" width="450" height="140" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1425px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 136px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Future&lt;void&gt; runTest(...)<br /><div>  <span style="background-color: initial;">final FakeAsync fakeAsync = FakeAsync();</span><br /></div><div>    _currentFakeAsync = fakeAsync; // reset in postTest</div><div>    _clock = fakeAsync.getClock(DateTime.utc(2015));</div><div>    late Future&lt;void&gt; testBodyResult;</div><div>    fakeAsync.run((FakeAsync localFakeAsync) {</div><div>      <span style="background-color: initial;">testBodyResult = _runTest(testBody, invariantTester, description);</span></div><div>    });</div><div>    ...(マイクロタスクのflush)</div></div></div></div></foreignObject><text x="713" y="1437" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Future&lt;void&gt; runTest(...)...</text></switch></g></g><g><rect x="707" y="1558" width="450" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 1565px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="713" y="1577" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 1157 1214 L 1217 1214 L 1218.88 1214" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1225.88 1214 L 1218.88 1217.5 L 1218.88 1210.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="157" y="30" width="540" height="550" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 538px; height: 1px; padding-top: 37px; margin-left: 159px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">void testWidgets(<span style="background-color: initial;">String description,</span><div>  WidgetTesterCallback callback,{..., TestVariant&lt;Object?&gt; variant = const DefaultTestVariant(),...}</div><div><br /></div><div><div>  final TestWidgetsFlutterBinding binding = TestWidgetsFlutterBinding.ensureInitialized();</div><div>  final WidgetTester tester = WidgetTester._(binding);</div><div>  for (final dynamic value in variant.values) {</div><div>    ...;</div><div>    final String combinedDescription = variationDescription.isNotEmpty</div><div>        ? '$description (variant: $variationDescription)'</div><div>        : description;</div><div>    test(</div><div>      combinedDescription,</div><div>      () {</div><div>        tester._testDescription = combinedDescription;</div><div>        ...</div><div>        test_package.addTearDown(binding.postTest);</div><div>        return binding.runTest(</div><div>          () async {</div><div>            ...</div><div>            Object? memento;</div><div>            try {</div><div>              memento = await variant.setUp(value);</div><div>              ...</div><div>              await callback(tester);</div><div>            } finally {</div><div>              await variant.tearDown(value, memento);</div><div>              ...</div><div>            }</div><div>            ...</div><div>          },</div><div>          ...</div><div>          description: combinedDescription,</div><div>        );</div><div>      },</div><div>      ...</div><div>    );</div><div>  }</div></div></div></div></div></foreignObject><text x="159" y="49" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void testWidgets(String description,...</text></switch></g></g><g><path d="M 1137 570 Q 1137 980 1086.95 980 Q 1036.9 980 1036.86 1029.87" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1036.85 1036.62 L 1032.36 1027.61 L 1036.86 1029.87 L 1041.36 1027.62 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 809px; margin-left: 1128px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div>(flutter test or webの場合)</div>ensureInitialized()</div></div></div></foreignObject><text x="1128" y="812" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">&#xa;(flutter test or webの場合)ensureInitialized()</text></switch></g></g><g><path d="M 987 794 L 1027 794 L 1027 886.01" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1027 899.01 L 1023.18 892.51 L 1027 886.01 L 1030.82 892.51 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 707 738 L 707 700 L 987 700 L 987 738" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 707 738 L 707 888 L 987 888 L 987 738" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 707 738 L 987 738" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 719px; margin-left: 847px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">enum LiveTestWidgetsFlutterBindingFramePolicy</div></div></div></foreignObject><text x="847" y="723" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">enum LiveTestWidgetsFlutterBindingFramePolicy</text></switch></g></g><g><rect x="707" y="738" width="280" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 745px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">onlyPumps</div></div></div></foreignObject><text x="713" y="757" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">onlyPumps</text></switch></g></g><g><rect x="707" y="768" width="280" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 775px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">fadePointers</div></div></div></foreignObject><text x="713" y="787" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">fadePointers</text></switch></g></g><g><rect x="707" y="798" width="280" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 805px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">fullyLive</div></div></div></foreignObject><text x="713" y="817" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">fullyLive</text></switch></g></g><g><rect x="707" y="828" width="280" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 835px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">benchmark</div></div></div></foreignObject><text x="713" y="847" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">benchmark</text></switch></g></g><g><rect x="707" y="858" width="280" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 865px; margin-left: 713px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">benchmarkLive</div></div></div></foreignObject><text x="713" y="877" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">benchmarkLive</text></switch></g></g><g><path d="M 1624.8 1247.22 Q 1624.8 1140 1540.9 1140 Q 1457 1140 1457 822.5 Q 1457 505 1427.1 505" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1420.35 505 L 1429.35 500.5 L 1427.1 505 L 1429.35 509.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 864px; margin-left: 1468px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div>ensureInitialized()</div></div></div></div></foreignObject><text x="1468" y="867" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">ensureInitialized()</text></switch></g></g><g><path d="M 1157 1460 Q 1192 1460 1192 1456.5 Q 1192 1453 1216.9 1453" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1223.65 1453 L 1214.65 1457.5 L 1216.9 1453 L 1214.65 1448.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1441px; margin-left: 1188px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">_runTest()</div></div></div></foreignObject><text x="1188" y="1444" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">_runTest()</text></switch></g></g><g><path d="M 1157 1063 Q 1192 1063 1192 1035.5 Q 1192 1008 1216.9 1008" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1223.65 1008 L 1214.65 1012.5 L 1216.9 1008 L 1214.65 1003.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1028px; margin-left: 1148px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">TestWidgetsFlutterBinding()</div></div></div></foreignObject><text x="1148" y="1031" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">TestWidgetsFlutterBinding()</text></switch></g></g><g><path d="M 1827 1219 L 1912 1219 L 1912 1220 L 1988.88 1220" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1995.88 1220 L 1988.88 1223.5 L 1988.88 1216.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1218px; margin-left: 1968px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">with</div></div></div></foreignObject><text x="1968" y="1221" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">with</text></switch></g></g><g><path d="M 2017 1223 L 2017 1105 L 2367 1105 L 2367 1223" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2017 1223 L 2017 1293 L 2367 1293 L 2367 1223" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2017 1223 L 2367 1223" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1164px; margin-left: 2192px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>mixin</div><div><span style="background-color: initial;">ServicesBinding,</span><br /></div><div>GestureBinding,</div><div>SemanticsBinding,</div><div>RendererBinding,</div><div>PaintingBinding,</div><div>TestDefaultBinaryMessengerBinding</div></div></div></div></foreignObject><text x="2192" y="1168" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">mixin...</text></switch></g></g><g><rect x="2017" y="1223" width="350" height="40" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 1230px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 36px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div>void initInstances() </div></div></div></foreignObject><text x="2023" y="1242" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="2017" y="1263" width="350" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 1270px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="2023" y="1282" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 1817 784.98 Q 1912 785 1912 782.5 Q 1912 780 2013.42 780.03" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2020.17 780.03 L 2011.16 784.53 L 2013.42 780.03 L 2011.17 775.53 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 789px; margin-left: 1947px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">initInstances()</div></div></div></foreignObject><text x="1947" y="792" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">initInstances()</text></switch></g></g><g><path d="M 2013.88 1378.5 Q 1922 1378.5 1922 1086.75 Q 1922 795 1767.1 794.99" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1760.35 794.99 L 1769.35 790.49 L 1767.1 794.99 L 1769.35 799.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1181px; margin-left: 1938px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">initInstances()</div></div></div></foreignObject><text x="1938" y="1184" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">initInstances()</text></switch></g></g><g><path d="M 167 688 L 167 650 L 657 650 L 657 688" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 167 688 L 167 1398 L 657 1398 L 657 688" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 167 688 L 657 688" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 669px; margin-left: 412px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">WidgetTester</div></div></div></foreignObject><text x="412" y="673" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">WidgetTester</text></switch></g></g><g><rect x="167" y="688" width="490" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 695px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>WidgetTester._(super.binding) {...}</div></div></div></div></foreignObject><text x="173" y="707" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">WidgetTester._(super.binding) {...}</text></switch></g></g><g><rect x="167" y="718" width="490" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 725px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">TestWidgetsFlutterBinding get binding =&gt; super.binding as TestWidgetsFlutterBinding;</div></div></div></foreignObject><text x="173" y="737" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">TestWidgetsFlutterBinding get binding =&gt; super.binding as TestWidgetsFlutterBind...</text></switch></g></g><g><rect x="167" y="748" width="490" height="110" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 755px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 106px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override</div><div>Future&lt;void&gt; pump([</div><div>    Duration? duration,</div><div>    EnginePhase phase = EnginePhase.sendSemanticsUpdate,</div><div>  ]) {</div><div>    return TestAsyncUtils.guard&lt;void&gt;(() =&gt; binding.pump(duration, phase));</div><div>  }</div></div></div></div></foreignObject><text x="173" y="767" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="167" y="858" width="490" height="190" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 865px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 186px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div><div>Future&lt;void&gt; pumpWidget(</div><div>    Widget widget, [</div><div>    Duration? duration,</div><div>    EnginePhase phase = EnginePhase.sendSemanticsUpdate,</div><div>  ]) {</div><div>    return TestAsyncUtils.guard&lt;void&gt;(() {</div><div>      binding.attachRootWidget(binding.wrapWithDefaultView(widget));</div><div>      binding.scheduleFrame();</div><div>      return binding.pump(duration, phase);</div><div>    });</div><div>  }</div></div></div></div></foreignObject><text x="173" y="877" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="167" y="1048" width="490" height="320" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 1055px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 316px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div><div>Future&lt;int&gt; pumpAndSettle([</div><div>    Duration duration = const Duration(milliseconds: 100),</div><div>    EnginePhase phase = EnginePhase.sendSemanticsUpdate,</div><div>    Duration timeout = const Duration(minutes: 10),</div><div>  ]) {</div><div>      return true;</div><div>    }());</div><div>    return TestAsyncUtils.guard&lt;int&gt;(() async {</div><div>      final DateTime endTime = binding.clock.fromNowBy(timeout);</div><div>      int count = 0;</div><div>      do {</div><div>        if (binding.clock.now().isAfter(endTime)) {</div><div>          throw FlutterError('pumpAndSettle timed out');</div><div>        }</div><div>        await binding.pump(duration, phase);</div><div>        count += 1;</div><div>      } while (binding.hasScheduledFrame);</div><div>      return count;</div><div>    });</div><div>  }</div></div></div></div></foreignObject><text x="173" y="1067" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="167" y="1368" width="490" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 1px; padding-top: 1375px; margin-left: 173px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="173" y="1387" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 427 580 Q 427 615 419.5 615 Q 412 615 412 639.9" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 412 646.65 L 407.5 637.65 L 412 639.9 L 416.5 637.65 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 611px; margin-left: 419px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">生成</div></div></div></foreignObject><text x="419" y="614" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">生成</text></switch></g></g><g><path d="M 172 1648 L 172 1610 L 447 1610 L 447 1648" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 172 1648 L 172 1708 L 447 1708 L 447 1648" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 172 1648 L 447 1648" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1629px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">abstract WidgetController</div></div></div></foreignObject><text x="310" y="1633" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">abstract WidgetController</text></switch></g></g><g><rect x="172" y="1648" width="275" height="30" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 265px; height: 1px; padding-top: 1655px; margin-left: 178px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">final WidgetsBinding binding;</div></div></div></foreignObject><text x="178" y="1667" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">final WidgetsBinding binding;</text></switch></g></g><g><rect x="172" y="1678" width="275" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 265px; height: 1px; padding-top: 1685px; margin-left: 178px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="178" y="1697" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 412 1398 L 412 1504 L 309.5 1504 L 309.5 1601.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 309.5 1608.88 L 306 1601.88 L 313 1601.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 1317 1628 L 1317 1700 L 547 1700 L 547 1411.99" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 547 1398.99 L 550.82 1405.49 L 547 1411.99 L 543.18 1405.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><path d="M 655.53 672.44 Q 682 672.4 682 987.7 Q 682 1303 696.9 1303" fill="none" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 703.65 1303 L 694.65 1307.5 L 696.9 1303 L 694.65 1298.5 Z" fill="#00ff00" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1085px; margin-left: 685px;"><div data-drawio-colors="color: #009900; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 153, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">pump()</div></div></div></foreignObject><text x="685" y="1089" fill="#009900" font-family="Helvetica" font-size="11px" text-anchor="middle">pump()</text></switch></g></g><g><rect x="707" y="660" width="420" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 418px; height: 1px; padding-top: 667px; margin-left: 709px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">import '_binding_io.dart' if (dart.library.html) '_binding_web.dart' as binding;</div></div></div></foreignObject><text x="709" y="679" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import '_binding_io.dart' if (dart.library.html) '_binding_web.dart' a...</text></switch></g></g><g><path d="M 157 440 Q 77 440 77 885 Q 77 1330 337 1330 Q 597 1330 597 1379 Q 597 1428 652 1428 Q 707 1428 707 1477.9" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 707 1484.65 L 702.5 1475.65 L 707 1477.9 L 711.5 1475.65 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 676px; margin-left: 89px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">runTest()</div></div></div></foreignObject><text x="89" y="679" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">runTest()</text></switch></g></g><g><path d="M 167 953 Q 57 953 57 1371.5 Q 57 1790 1221.5 1790 Q 2386 1790 2386 1551 Q 2386 1312 2366.29 1312.01" fill="none" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2359.54 1312.01 L 2368.54 1307.51 L 2366.29 1312.01 L 2368.55 1316.51 Z" fill="#00ff00" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1200px; margin-left: 48px;"><div data-drawio-colors="color: #009900; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 153, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">attachRootWidget()<div>scheduleFrame()</div></div></div></div></foreignObject><text x="48" y="1203" fill="#009900" font-family="Helvetica" font-size="11px" text-anchor="middle">attachRootWidget()...</text></switch></g></g><g><path d="M 2017 698 L 2017 650 L 2367 650 L 2367 698" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2017 698 L 2017 928 L 2367 928 L 2367 698" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2017 698 L 2367 698" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 674px; margin-left: 2192px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>mixin</div><div>SchedulerBinding</div></div></div></div></foreignObject><text x="2192" y="678" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">mixin...</text></switch></g></g><g><rect x="2017" y="698" width="350" height="40" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 705px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 36px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div>void initInstances() </div></div></div></foreignObject><text x="2023" y="717" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="2017" y="738" width="350" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 745px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>void scheduleFrame()</div></div></div></div></foreignObject><text x="2023" y="757" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void scheduleFrame()</text></switch></g></g><g><rect x="2017" y="768" width="350" height="130" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 775px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 126px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>void handleBeginFrame(Duration? rawTimeStamp) {</div><div>    ...</div><div><span style="background-color: initial;">    firstRawTimeStampInEpoch ??= rawTimeStamp;</span></div><div>    _currentFrameTimeStamp = </div><div>      _adjustForEpoch(rawTimeStamp ?? _lastRawTimeStamp);</div><div>    if (rawTimeStamp != null) {</div><div>      _lastRawTimeStamp = rawTimeStamp;</div><div>    }</div></div></div></div></foreignObject><text x="2023" y="787" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void handleBeginFrame(Duration? rawTimeStamp) {...</text></switch></g></g><g><rect x="2017" y="898" width="350" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 905px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="2023" y="917" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 2017 988 L 2017 940 L 2367 940 L 2367 988" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2017 988 L 2017 1088 L 2367 1088 L 2367 988" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2017 988 L 2367 988" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 964px; margin-left: 2192px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>mixin</div><div>WidgetsBinding<br /></div></div></div></div></foreignObject><text x="2192" y="968" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">mixin...</text></switch></g></g><g><rect x="2017" y="988" width="350" height="40" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 995px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 36px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>@override<br /></div>void initInstances() </div></div></div></foreignObject><text x="2023" y="1007" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">@override...</text></switch></g></g><g><rect x="2017" y="1028" width="350" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 1035px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">attachRootWidget()</div></div></div></foreignObject><text x="2023" y="1047" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">attachRootWidget()</text></switch></g></g><g><rect x="2017" y="1058" width="350" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 340px; height: 1px; padding-top: 1065px; margin-left: 2023px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="2023" y="1077" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 1157 1128.78 Q 1192 1128.8 1192 1150.9 Q 1192 1173 1216.9 1173" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1223.65 1173 L 1214.65 1177.5 L 1216.9 1173 L 1214.65 1168.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1135px; margin-left: 1188px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">initInstances()</div></div></div></foreignObject><text x="1188" y="1139" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">initInstances()</text></switch></g></g><g><rect x="1577" y="440" width="270" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 268px; height: 1px; padding-top: 447px; margin-left: 1579px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>void setupHttpOverrides() {</div><div>  HttpOverrides.global = _MockHttpOverrides();</div><div>}</div></div></div></div></foreignObject><text x="1579" y="459" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void setupHttpOverrides() {...</text></switch></g></g><g><path d="M 1992 460 L 1992 422 L 2302 422 L 2302 460" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1992 460 L 1992 550 L 2302 550 L 2302 460" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1992 460 L 2302 460" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 441px; margin-left: 2147px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>abstract HttpOverrides</div></div></div></div></foreignObject><text x="2147" y="445" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">abstract HttpOverrides</text></switch></g></g><g><rect x="1992" y="460" width="310" height="60" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 300px; height: 1px; padding-top: 467px; margin-left: 1998px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>static set global(HttpOverrides? overrides) {</div><div>    _global = overrides;</div><div>  }</div></div></div></div></foreignObject><text x="1998" y="479" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">static set global(HttpOverrides? overrides) {...</text></switch></g></g><g><rect x="1992" y="520" width="310" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 300px; height: 1px; padding-top: 527px; margin-left: 1998px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="1998" y="539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 1847 470 Q 1919.5 470 1919.5 478 Q 1919.5 486 1981.9 486" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1988.65 486 L 1979.65 490.5 L 1981.9 486 L 1979.65 481.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 476px; margin-left: 1896px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">setter global</div></div></div></foreignObject><text x="1896" y="479" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">setter global</text></switch></g></g><g><path d="M 1577 763 L 1577 715 L 1827 715 L 1827 763" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1577 763 L 1577 863 L 1827 863 L 1827 763" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1577 763 L 1827 763" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 739px; margin-left: 1702px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div>mixin</div><div>TestDefaultBinaryMessengerBinding</div></div></div></div></foreignObject><text x="1702" y="743" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">mixin...</text></switch></g></g><g><rect x="1577" y="763" width="250" height="70" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 240px; height: 1px; padding-top: 770px; margin-left: 1583px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>void initInstances() {</div><div>    super.initInstances();</div><div>    _instance = this;</div><div>  }</div><div></div></div></div></div></foreignObject><text x="1583" y="782" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void initInstances() {...</text></switch></g></g><g><rect x="1577" y="833" width="250" height="30" fill="none" stroke="rgb(0, 0, 0)" stroke-dasharray="1 4" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 240px; height: 1px; padding-top: 840px; margin-left: 1583px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 26px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">...</div></div></div></foreignObject><text x="1583" y="852" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">...</text></switch></g></g><g><path d="M 427 580 Q 427 590 931.1 590 Q 1435.2 590 1435.2 1235.92" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1435.2 1242.67 L 1430.7 1233.67 L 1435.2 1235.92 L 1439.7 1233.67 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 586px; margin-left: 731px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">ensureInitialized()</div></div></div></foreignObject><text x="731" y="589" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">ensureInitialized()</text></switch></g></g><g><path d="M 2289.5 1310 Q 2296 1310 2296 1580 Q 2296 1850 1591.5 1850 Q 887 1850 887 1170.11" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 887 1163.36 L 891.5 1172.36 L 887 1170.11 L 882.5 1172.36 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1559px; margin-left: 2297px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">initInstances()</div></div></div></foreignObject><text x="2297" y="1562" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">initInstances()</text></switch></g></g><g><path d="M 936.95 1360.04 Q 1587 1360 1587 1056.5 Q 1587 753 2006.9 753" fill="none" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2013.65 753 L 2004.65 757.5 L 2006.9 753 L 2004.65 748.5 Z" fill="#00ff00" stroke="#00ff00" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1361px; margin-left: 1038px;"><div data-drawio-colors="color: #009900; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 153, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">handleBeginFrame()<div>handleDrawFrame()</div></div></div></div></foreignObject><text x="1038" y="1364" fill="#009900" font-family="Helvetica" font-size="11px" text-anchor="middle">handleBeginFrame()...</text></switch></g></g><g><path d="M 1547 958 Q 1547 470 1566.9 470" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1573.65 470 L 1564.65 474.5 L 1566.9 470 L 1564.65 465.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 889px; margin-left: 1568px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">setupHttpOverrides()</div></div></div></foreignObject><text x="1568" y="892" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">setupHttpOverrides()</text></switch></g></g><g><path d="M 1697 920 L 1697 890 L 1697 871.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1697 864.12 L 1700.5 871.12 L 1693.5 871.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 896px; margin-left: 1696px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">with</div></div></div></foreignObject><text x="1696" y="899" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">with</text></switch></g></g><g><rect x="2017" y="1510" width="160" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 158px; height: 1px; padding-top: 1517px; margin-left: 2019px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">void runApp(Widget app)</div></div></div></foreignObject><text x="2019" y="1529" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">void runApp(Widget app)</text></switch></g></g><g><path d="M 1067 1059.99 Q 1067 1120 1087 1120 Q 1107 1120 1107 1405 Q 1107 1690 1633.5 1690 Q 2160 1690 2160 1445.78" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2160 1439.03 L 2164.5 1448.03 L 2160 1445.78 L 2155.5 1448.03 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1271px; margin-left: 1143px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">BindingBase()</div></div></div></foreignObject><text x="1143" y="1274" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">BindingBase()</text></switch></g></g><g><path d="M 1827 1553 Q 1922 1553 1922 1539 Q 1922 1525 2006.9 1525" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2013.65 1525 L 2004.65 1529.5 L 2006.9 1525 L 2004.65 1520.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1541px; margin-left: 1913px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">runApp()<div>※ リセットの為?</div></div></div></div></foreignObject><text x="1913" y="1544" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">runApp()...</text></switch></g></g><g><path d="M 1446 1507.19 Q 1446 1373.6 1165.75 1373.61" fill="none" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1159 1373.61 L 1168 1369.11 L 1165.75 1373.61 L 1168 1378.11 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1341px; margin-left: 1328px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">_runTestBody()</div></div></div></foreignObject><text x="1328" y="1344" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">_runTestBody()</text></switch></g></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1433px; margin-left: 1414px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">pump()</div></div></div></foreignObject><text x="1414" y="1436" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">pump()</text></switch></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>